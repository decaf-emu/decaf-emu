language: cpp

matrix:
  include:
    - os: linux
      sudo: required
      dist: xenial
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
        - CONAN_COMPILER=gcc
        - CONAN_COMPILER_VERSION=8
    - os: linux
      sudo: required
      dist: xenial
      env:
        - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
        - CONAN_COMPILER=clang
        - CONAN_COMPILER_VERSION=6.0

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - sourceline: 'ppa:cginternals/ppa'
      - sourceline: 'deb https://packages.lunarg.com/vulkan/1.1.101 xenial main'
        key_url: 'http://packages.lunarg.com/lunarg-signing-key-pub.asc'
    packages:
      - clang-6.0
      - g++-8
      - gcc-8
      - libasound2-dev
      - libcurl4-openssl-dev
      - libjack-dev
      - libpulse-dev
      - libglbinding-dbg
      - libglbinding-dev
      - libglu1-mesa-dev
      - libssl-dev
      - libsdl2-dev
      - libx11-dev
      - libxcursor-dev
      - lunarg-vulkan-sdk
      - xorg-dev

language: cpp

cache:
  pip: true
  directories:
    - "$HOME/.local"
    - "$HOME/.conan"

before_install:
  - eval "${MATRIX_EVAL}"

install:
  - mkdir "$TRAVIS_BUILD_DIR/build"
  - pip install --user conan
  - conan user
  - conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan || true
  - cd "$TRAVIS_BUILD_DIR/build"; conan install .. --build=missing -s compiler=$CONAN_COMPILER -s compiler.version=$CONAN_COMPILER_VERSION -o silent=True -o curl=False -o openssl=False -o ffmpeg=False -o sdl2=False

script:
  - cd "$TRAVIS_BUILD_DIR/build"
  - export PATH=/usr/lib/binutils-2.26/bin:$PATH
  - cmake -DDECAF_BUILD_TOOLS=ON -DDECAF_FFMPEG=OFF -DCMAKE_BUILD_TYPE=Release ..
  - make -j4
